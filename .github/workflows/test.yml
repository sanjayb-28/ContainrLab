name: Test

on:
  pull_request:
    branches: [ main, aws-deployment ]
  push:
    branches: [ main, aws-deployment ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          cd backend
          pytest tests/ -v --tb=short
        env:
          GITHUB_CLIENT_ID: test-client-id
          GITHUB_CLIENT_SECRET: test-client-secret
          RUNNERD_BASE_URL: http://localhost:8080
          # Note: GEMINI_API_KEY intentionally not set - tests verify behavior when disabled
      
      - name: Check code formatting
        run: |
          cd backend
          pip install black
          black --check .
        continue-on-error: true

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Check TypeScript
        run: |
          cd frontend
          npm run build
        env:
          SKIP_ENV_VALIDATION: true
          NEXTAUTH_SECRET: test-secret-for-ci
          NEXTAUTH_URL: http://localhost:3000
          GITHUB_CLIENT_ID: test-client-id
          GITHUB_CLIENT_SECRET: test-client-secret
          NEXT_PUBLIC_API_BASE: http://localhost:8000
      
      - name: Lint
        run: |
          cd frontend
          npm run lint
        continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
      
      - name: Check for secrets
        run: |
          echo "Checking for accidentally committed secrets..."
          ! git grep -i "password.*=.*['\"]" -- '*.py' '*.ts' '*.tsx' '*.js'
          ! git grep -i "secret.*=.*['\"]" -- '*.py' '*.ts' '*.tsx' '*.js'
          echo "âœ… No hardcoded secrets found"
